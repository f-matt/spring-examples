<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	   		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- this is the service object that we want to make transactional -->
	<!-- <bean id="fooService" class="x.y.service.FooServiceImpl"/> -->
	<context:component-scan base-package="x.y" />
	<context:annotation-config />
	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<!-- <tx:advice id="txAdvice" transaction-manager="txManager"> -->
	<!-- the transactional semantics... -->
	<!-- <tx:attributes> -->
	<!-- all methods starting with 'get' are read-only -->
	<!-- <tx:method name="get*" read-only="true"/> -->
	<!-- other methods use the default transaction settings (see below) -->

	<!-- <tx:method name="*"/> </tx:attributes> </tx:advice> -->

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<!-- <aop:config> <aop:pointcut id="fooServiceOperation" expression="execution(* 
		x.y.service.FooService.*(..))"/> <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/> 
		</aop:config> -->

	<!-- don't forget the DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/tmp1" />
		<property name="user" value="postgres" />
		<property name="password" value="7325002" />
		
		<!-- Configuração C3P0 -->
		<property name="acquireIncrement" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="300" />
	</bean>

	<!-- Session Factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>WEB-INF/hibernate.cfg.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- similarly, don't forget the PlatformTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/tmp2" />
		<property name="user" value="postgres" />
		<property name="password" value="7325002" />
		
		<!-- Configuração C3P0 -->
		<property name="acquireIncrement" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="300" />
	</bean>

	<!-- Session Factory -->
	<bean id="sessionFactory2"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<property name="configLocation">
			<value>WEB-INF/hibernate2.cfg.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- similarly, don't forget the PlatformTransactionManager -->
	<bean id="transactionManager2"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory2" />
	</bean>
	<!-- other <bean/> definitions here -->

</beans>